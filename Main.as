package {	//questions	/*	*how might I make the game resizeable?	*/	import flash.display.Sprite;	import flash.ui.Mouse;	import flash.events.*;	import flash.geom.ColorTransform;	import flash.display.MovieClip;	import fl.motion.Color;	import flash.filters.*;	public class Main extends MovieClip {		//goes in skyLayer		var preInitLayer:Sprite = new Sprite();		var skyLayer:Sprite = new Sprite();		var cloudLayer:Sprite = new Sprite();		var groundLayer:Sprite = new Sprite();		var rainGrassLayer:Sprite = new Sprite();//goes in groundLayer		var sceneLayer:Sprite = new Sprite();//goes in groundLayer		var characterLayer:Sprite = new Sprite();//goes in groundLayer		var darkLayer:Sprite = new Sprite();//masks normal Layer		var lightLayer:Sprite = new Sprite();		//stage variables		var time:String = "night";		var sunY:Number = mouseY;		var sunYprev:Number = mouseY;		var dyBuff:Number = 0;		var dryness:Number = 0;		var darkAlpha:Number = 1;		var lightAlpha:Number = 1;		var sunGreen:Number = 255;		var sunBlue:Number = 255;		var sunColorTransform:ColorTransform = new ColorTransform();		var lightColorTransform:ColorTransform = new ColorTransform();		//stage characters		var groundColor:ColorTransform = new ColorTransform();		var ground:Sprite = new Sprite();		var sun:Sprite = new Sprite();		var owl:Owl = new Owl();		var stars:Stars = new Stars();		var tree:Tree;		var leaves:Leaves;		public function Main() {			trace("AS main");			addEventListener(Event.ADDED_TO_STAGE, preInit);		}		function preInit(evt:Event):void {			addLayers();						var startSun:Sprite = new Sprite();			startSun.x = stage.stageWidth / 2;			startSun.y = stage.stageHeight / 2;			startSun.graphics.beginFill(0xFF4400, 1);			startSun.graphics.drawCircle(0, 0, 50);			startSun.buttonMode = true;			startSun.addEventListener(MouseEvent.MOUSE_DOWN, init);			preInitLayer.addChild(startSun);		}		function init(evt:Event):void {			makeSky();			makeGround();			makeScene();			makeCharacters();			makeLight();		}		function addLayers():void {			addChild(preInitLayer);			addChild(skyLayer);			addChild(cloudLayer);			addChild(groundLayer);			addChild(rainGrassLayer);			addChild(sceneLayer);			addChild(characterLayer);			addChild(darkLayer);			addChild(lightLayer);		}		function makeGround():void {			ground.graphics.beginFill(0x22aa22, 1);			ground.graphics.drawRect(0,0,1000, 600);			groundLayer.addChild(ground);			groundLayer.y = 300;		}		function makeScene():void {			tree = new Tree();			leaves = new Leaves();			tree.scaleX = .8;			leaves.scaleX = .8;			tree.scaleY = 1;			leaves.scaleY = 1;			tree.x = 20;			leaves.x = 20;			tree.y = 50;			leaves.y = 50;			sceneLayer.addChild(tree);			sceneLayer.addChild(leaves);		}		function makeCharacters():void {			owl.scaleX = .25;			owl.scaleY = .25;			owl.x = stage.stageWidth * .365;			owl.y = stage.stageHeight * .40;			characterLayer.addChild(owl);		}		function makeLight():void {			lightLayer.graphics.beginFill(0xffffff, 1);			lightLayer.graphics.drawRect(0,0,1000,600);			darkLayer.graphics.beginFill(0x000055, .5);			darkLayer.graphics.drawRect(0,0,1000,600);			addEventListener(Event.ENTER_FRAME, update);		}		function update(Evt:Event):void {			updateTime();			updateLight();			sunTimeFlux();			updateRain();			updateDryness();		}		function makeClouds():void {			var c1:Sprite = new cloud1(this, rainGrassLayer);			var c2:Sprite = new cloud2(this, rainGrassLayer);			var c3:Sprite = new cloud3(this, rainGrassLayer);			c1.x = 50;			c1.y = 100;			c1.scaleX = .8;			c1.scaleY = .8;			c2.x = 350;			c2.y = 225;			c2.scaleX = .5;			c2.scaleY = .5;			c3.x = 600;			c3.y = -150;			c3.scaleX = 2;			c3.scaleY = 2;			cloudLayer.addChild(c2);			cloudLayer.addChild(c1);			cloudLayer.addChild(c3);		}		function makeSky():void {			var sky:Sprite = new Sprite();			sky.graphics.beginFill(0xaaddff);			sky.graphics.drawRect(0,0,stage.stageWidth,stage.stageHeight);			sun.graphics.beginFill(0xffffff, 1);			sun.graphics.drawCircle(0, 0, stage.stageWidth/20); //50			var sunGlow:GlowFilter = new GlowFilter();			sunGlow.blurX = 10;			sunGlow.blurY = 10;			sun.filters = [sunGlow];			skyLayer.addChild(sky);			skyLayer.addChild(stars);			skyLayer.addChild(sun);			sun.x = stage.mouseX;			sun.y = stage.mouseY;			sun.startDrag();			Mouse.hide();			stars.addEventListener(Event.ENTER_FRAME, starsFollowMouse);			makeClouds();		}		function starsFollowMouse(evt:Event):void {			stars.x = stage.mouseX;			stars.y = stage.mouseY;		}		function updateDryness():void {			//if the sun is below the horizon and dryness isn't full			if (sun.y < stage.stageHeight/2 && dryness < 100) {				dryness += -(sun.y-(stage.stageHeight/2))*.0005; //add a bit of dryness			}			groundColor.greenOffset = dryness * .3;			groundColor.blueOffset = dryness * 1.3;			groundColor.redOffset = dryness * 1.9;			ground.transform.colorTransform = groundColor;			//adjust colorTransform for the leaves on the tree			groundColor.greenOffset -=  (dryness / 100) * 120;			groundColor.blueOffset -=  (dryness / 100) * 100;			groundColor.redOffset -=  (dryness / 100) * 100;			leaves.transform.colorTransform = groundColor;			//starting at 50% dryness			if (dryness > 50) {				for (var i = 0; i < rainGrassLayer.numChildren; i++) {					//grass has a chance to die					if (rainGrassLayer.getChildAt(i) is Grass && ((dryness-50)*.5 > Math.random()*1000)) {						Grass(rainGrassLayer.getChildAt(i)).die();					}				}			}		}		function updateRain():void {			for (var i:uint = 0; i < cloudLayer.numChildren; i++) {				var cloud:Cloud = Cloud(cloudLayer.getChildAt(i));				if (sun.hitTestObject(cloud) && cloud.fullness > 0) {					Cloud(cloudLayer.getChildAt(i)).rain();					if (dryness > 0 ) {						dryness -=  .2;					}				}			}		}		function updateLight():void {			darkAlpha = ((stage.mouseY-groundLayer.y))/200;			if (darkAlpha > .8) {				darkAlpha = .8;			}			darkLayer.graphics.clear();			darkLayer.graphics.beginFill(0x000044, darkAlpha);			darkLayer.graphics.drawRect(0,0,1000,600);			stars.alpha = (darkAlpha - .3) * 1.5;			sunGreen = -((stage.mouseY-groundLayer.y)+150)*1.2;			sunBlue = -((stage.mouseY-groundLayer.y)+150);			if (sunBlue > -255) {				sunBlue = -255;			}			sunColorTransform.greenOffset = sunGreen;			sunColorTransform.blueOffset = sunBlue;			sun.transform.colorTransform = sunColorTransform;			var filter:GlowFilter = sun.filters.pop();			filter.color = 0xFFFF00;			sun.filters = [filter];			//transform the lightLayer to brighten like the sun			lightAlpha = -((stage.mouseY-groundLayer.y)-100)/50;			if (lightAlpha>1) {				lightAlpha = 1;			}			lightAlpha *=  .2;//max at .175			lightColorTransform.greenOffset = sunGreen;			lightColorTransform.blueOffset = sunBlue;			lightColorTransform.alphaMultiplier = lightAlpha;			lightLayer.transform.colorTransform = lightColorTransform;		}		function sunTimeFlux():void {			var sunFlux:int;			var dy:int = (mouseY - sunYprev);//current change in y			sunYprev = mouseY;			if (dy < 0) {//always positive				dy *=  -1;			}			dyBuff +=  dy;//total change in y			sunFlux = dyBuff / 3;//easing			dyBuff -=  sunFlux;			//clouds rain and dryness update 3x every pixel			for (var i:uint = 0; i < sunFlux*2; i++) {				for (var j:uint = 0; j < cloudLayer.numChildren; j++) {					Cloud(cloudLayer.getChildAt(j)).sunUpdate();				}			}			//owl updates once every 5 pixels;			for (i = 0; i < sunFlux/5; i++) {				owl.sunUpdate();			}			//dryness updates once every 10 pixels			for (i = 0; i < sunFlux/10; i++) {				updateDryness();			}			//update rain for every pixel			for (i=0; i < sunFlux; i++) {				updateRain();				for (j = 0; j < rainGrassLayer.numChildren; j++) {					var rainObject:Object = rainGrassLayer.getChildAt(j);					if (rainObject is rainDrop) {						rainDrop(rainObject).sunUpdate();					}					if (rainObject is Grass) {						Grass(rainObject).sunUpdate();					}				}			}		}		function updateTime():void {			//trace(time, sunHeight);			var sunHeight:int = -(mouseY - groundLayer.y+ 50);			if (time == "night" && sunHeight > -99) {				sunRise();			}			if (time == "day" && sunHeight < 0) {				sunSet();			}			if (time == "dawn" && sunHeight > 0) {				sunUp();			}			if (time == "dusk" && sunHeight < -100) {				sunDown();			}		}		function sunRise():void {			time = "dawn";			//trace("sunrise")			owl.closeEyes();		}		function sunUp():void {			//trace("sunup")			time = "day";		}		function sunSet():void {			//trace("sunset")			time = "dusk";		}		function sunDown():void {			//trace("sundown")			time = "night";			owl.openEyes();		}	}}