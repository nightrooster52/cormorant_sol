package {	import flash.display.Sprite;	import flash.events.Event;	import flash.display.MovieClip;	public class Cloud extends Sprite {		protected var dark:Sprite = new Sprite();		public var fullness:Number = 0;		protected var rainWait:int = 0;		protected var rainLayer:Sprite;		protected var rainDelay:int = 3;		protected var main:Main;		public function Cloud(main:Main, rainLayer:Sprite) {			this.rainLayer = rainLayer;			addEventListener(Event.ENTER_FRAME, updateCloud);		}		function moveCloud():void {			this.x +=  this.scaleX*.6;			if (this.x > stage.stageWidth) {				cloudRespawn();			}		}		function updateCloud(evt:Event):void {			moveCloud();		}		public function sunUpdate():void {			moveCloud();		}		function cloudRespawn():void {			this.x = -300;			empty(); //clear any previous rain			if (stage.mouseY>(stage.stageHeight/2) || Math.random()<.2 && main.rainGrassLayer.numChildren < 1200) {//a 1/5 chance of being a rain cloud					fill();			}			if (this.y == 225) {				parent.addChild(this);				this.x -=  300;				this.y = -150;				this.scaleX = 2;				this.scaleY = 2;			}			else if (this.y == -150) {				this.y = 100;				this.scaleX = .8;				this.scaleY = .8;			}			else if (this.y == 100) {				this.y = 150;				this.scaleX = .7;				this.scaleY = .7;			}			else if (this.y == 150) {				this.y = 225;				this.scaleX = .5;				this.scaleY = .5;			}			else {				trace("this not respawned");			}		}		public function rain():void {			//trace(fullness);			rainWait++;			if (fullness > 0 && rainWait > rainDelay) {				fullness -=  1;				dark.alpha -=  .01;				rainWait = 0;				var rain:MovieClip = new rainDrop();				rain.x = Math.random() * width + this.x;				rain.y = this.y + this.height - Math.random() * 10;				rain.scaleX = this.scaleX;				rain.scaleY = -(rain.y - 300)/400;				rainLayer.addChild(rain);			}		}		public function fill():void {			fullness = 100;			dark.alpha = 1;		}		public function empty():void {			fullness = 0;			dark.alpha = 0;		}	}}